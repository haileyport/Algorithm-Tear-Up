/*
 * 통과 여부 : 통과
* 점수 : +5 였나..?
* 시간 : 30분
 * 각 부서가 신청한 금액만큼 모두 지원
 * 테스트 1 〉	통과 (0.05ms, 33.4MB)
테스트 2 〉	통과 (0.06ms, 33.4MB)
테스트 3 〉	통과 (0.07ms, 33.4MB)
테스트 4 〉	통과 (0.06ms, 33.6MB)
테스트 5 〉	통과 (0.06ms, 33.4MB)
테스트 6 〉	통과 (0.06ms, 33.5MB)
테스트 7 〉	통과 (0.21ms, 33.4MB)
테스트 8 〉	통과 (0.15ms, 33.5MB)
테스트 9 〉	통과 (0.24ms, 33.6MB)
테스트 10 〉	통과 (0.15ms, 33.5MB)
테스트 11 〉	통과 (0.15ms, 33.4MB)
테스트 12 〉	통과 (0.15ms, 33.4MB)
테스트 13 〉	통과 (0.15ms, 33.6MB)
테스트 14 〉	통과 (0.21ms, 33.4MB)
테스트 15 〉	통과 (0.22ms, 33.5MB)
테스트 16 〉	통과 (0.16ms, 33.4MB)
테스트 17 〉	통과 (0.14ms, 33.5MB)
테스트 18 〉	통과 (0.16ms, 33.4MB)
테스트 19 〉	통과 (0.15ms, 33.5MB)
테스트 20 〉	통과 (0.13ms, 33.4MB)
테스트 21 〉	통과 (0.13ms, 33.5MB)
테스트 22 〉	통과 (0.13ms, 33.4MB)
테스트 23 〉	통과 (0.16ms, 33.5MB)
 */
function solution(d, budget) {
  // 신청한 예산만큼 지원해줘야 함.
  // 예산은 budget
  // return 몇 개의 부서에 가능한지

  /*
    1. d를 더한다.
    2. 더한 값이 budget보다 커진다면 다음 값을 살펴보기
    3. 아 sort해서 보면 다음에 안 봐도 됨
    */

  let answer = 0;
  let count = 0;
  d.sort((a, b) => a - b); // 정렬 때문에 틀렸었네
  for (let i = 0; i < d.length; i++) {
    if (answer + d[i] <= budget) {
      answer += d[i];
      count++;
    }
  }
  return count;
}

/*
forEach가 더 시간 오래 걸림
테스트 1 〉	통과 (0.05ms, 33.6MB)
테스트 2 〉	통과 (0.05ms, 33.6MB)
테스트 3 〉	통과 (0.07ms, 33.5MB)
테스트 4 〉	통과 (0.06ms, 33.5MB)
테스트 5 〉	통과 (0.08ms, 33.4MB)
테스트 6 〉	통과 (0.08ms, 33.5MB)
테스트 7 〉	통과 (0.24ms, 33.6MB)
테스트 8 〉	통과 (0.16ms, 33.6MB)
테스트 9 〉	통과 (0.16ms, 33.5MB)
테스트 10 〉	통과 (0.20ms, 33.4MB)
테스트 11 〉	통과 (0.16ms, 33.5MB)
테스트 12 〉	통과 (0.23ms, 33.5MB)
테스트 13 〉	통과 (0.15ms, 33.4MB)
테스트 14 〉	통과 (0.15ms, 33.6MB)
테스트 15 〉	통과 (0.15ms, 33.5MB)
테스트 16 〉	통과 (0.16ms, 33.6MB)
테스트 17 〉	통과 (0.17ms, 33.5MB)
테스트 18 〉	통과 (0.16ms, 33.6MB)
테스트 19 〉	통과 (0.15ms, 33.6MB)
테스트 20 〉	통과 (0.22ms, 33.5MB)
테스트 21 〉	통과 (0.22ms, 33.5MB)
테스트 22 〉	통과 (0.21ms, 33.7MB)
테스트 23 〉	통과 (0.21ms, 33.5MB)

*/
