/**
 * 통과 여부 : 통과
 * 시간 : 30분
 * 점수 : +2
 *
 * @param {*} k 최상품의 사과 / 1점은 최하위
 * @param {*} m 사과 한 상자에 들어있는 사과 개수
 * @param {*} score 사과 한 상자의 가격은 상자 중 가장 낮은 점수 * m
 * @returns 과일장수가 얻을 수 있는 최대 이익
 * 이익이 발생하지 않는 경우에는 0
 */
function solution(k, m, score) {
  let copied = score.sort((a, b) => b - a);
  let length = score.length;
  let result = 0;

  for (let i = m - 1; i < length; i += m) {
    result += copied[i] * m;
  }

  return result;
}

console.log(solution(4, 3, [4, 1, 2, 2, 4, 4, 4, 4, 1, 2, 4, 2]));

/*
테스트 1 〉	통과 (0.18ms, 33.5MB)
테스트 2 〉	통과 (0.06ms, 33.5MB)
테스트 3 〉	통과 (0.14ms, 33.6MB)
테스트 4 〉	통과 (0.06ms, 33.4MB)
테스트 5 〉	통과 (0.06ms, 33.5MB)
테스트 6 〉	통과 (15.32ms, 39.4MB)
테스트 7 〉	통과 (17.18ms, 37.8MB)
테스트 8 〉	통과 (3.78ms, 35.8MB)
테스트 9 〉	통과 (15.36ms, 37.9MB)
테스트 10 〉	통과 (12.84ms, 38.9MB)
테스트 11 〉	통과 (196.15ms, 83.3MB)
테스트 12 〉	통과 (212.78ms, 83.8MB)
테스트 13 〉	통과 (215.72ms, 83.3MB)
테스트 14 〉	통과 (189.56ms, 82.4MB)
테스트 15 〉	통과 (202.03ms, 82.3MB)
테스트 16 〉	통과 (0.06ms, 33.5MB)
테스트 17 〉	통과 (0.06ms, 33.4MB)
테스트 18 〉	통과 (0.14ms, 33.4MB)
테스트 19 〉	통과 (0.15ms, 33.4MB)
테스트 20 〉	통과 (0.13ms, 33.4MB)
테스트 21 〉	통과 (0.05ms, 33.5MB)
테스트 22 〉	통과 (0.05ms, 33.5MB)
테스트 23 〉	통과 (0.07ms, 33.6MB)
테스트 24 〉	통과 (0.05ms, 33.5MB)
*/
