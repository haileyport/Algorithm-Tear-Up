/**
 * 통과 여부 : 통과
 * 시간 : 5분
 * 점수 : +6
 */

/**
 * 
 * @param {*} price 원래 이용료
 * @param {*} money N번째 이용하면 N배
 * @param {*} count 이용횟수
 * @returns 돈에서 얼마나 모자라는지, 안 부족하면 0
 */
 function solution(price, money, count) {
    let cost = 0;

    for (let i = 1; i <= count; i++) {
        cost += price * i; 
    }
    // 리턴할 때 연산하면 시간이 더 걸린다! 변수로 담아주면 공간 대신 시간 겟
    let balance = money - cost;
    return balance>0? 0:Math.abs(balance) ;
}

/*
테스트 1 〉	통과 (0.11ms, 33.6MB)
테스트 2 〉	통과 (0.04ms, 33.5MB)
테스트 3 〉	통과 (0.11ms, 33.5MB)
테스트 4 〉	통과 (0.10ms, 33.4MB)
테스트 5 〉	통과 (0.11ms, 33.5MB)
테스트 6 〉	통과 (0.11ms, 33.5MB)
테스트 7 〉	통과 (0.12ms, 33.4MB)
테스트 8 〉	통과 (0.15ms, 33.5MB)
테스트 9 〉	통과 (0.12ms, 33.5MB)
테스트 10 〉	통과 (0.13ms, 33.5MB)
테스트 11 〉	통과 (0.12ms, 33.5MB)
테스트 12 〉	통과 (0.13ms, 33.5MB)
테스트 13 〉	통과 (0.12ms, 33.5MB)
테스트 14 〉	통과 (0.12ms, 33.6MB)
테스트 15 〉	통과 (0.14ms, 33.4MB)
테스트 16 〉	통과 (0.12ms, 33.5MB)
테스트 17 〉	통과 (0.11ms, 33.5MB)
테스트 18 〉	통과 (0.14ms, 33.5MB)
테스트 19 〉	통과 (0.15ms, 33.6MB)
테스트 20 〉	통과 (0.17ms, 33.5MB)
테스트 21 〉	통과 (0.16ms, 33.4MB)
테스트 22 〉	통과 (0.15ms, 33.5MB)
테스트 23 〉	통과 (0.18ms, 33.4MB)
*/

/**
 * 와 변수에 담으니까 진짜 줄어든다
 * 테스트 1 〉	통과 (0.05ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.05ms, 33.4MB)
테스트 4 〉	통과 (0.04ms, 33.4MB)
테스트 5 〉	통과 (0.04ms, 33.4MB)
테스트 6 〉	통과 (0.06ms, 33.4MB)
테스트 7 〉	통과 (0.04ms, 33.6MB)
테스트 8 〉	통과 (0.04ms, 33.6MB)
테스트 9 〉	통과 (0.05ms, 33.4MB)
테스트 10 〉	통과 (0.04ms, 33.5MB)
테스트 11 〉	통과 (0.05ms, 33.6MB)
테스트 12 〉	통과 (0.06ms, 33.4MB)
테스트 13 〉	통과 (0.09ms, 33.4MB)
테스트 14 〉	통과 (0.06ms, 33.6MB)
테스트 15 〉	통과 (0.06ms, 33.4MB)
테스트 16 〉	통과 (0.06ms, 33.4MB)
테스트 17 〉	통과 (0.06ms, 33.4MB)
테스트 18 〉	통과 (0.08ms, 33.4MB)
테스트 19 〉	통과 (0.11ms, 33.4MB)
테스트 20 〉	통과 (0.11ms, 33.4MB)
테스트 21 〉	통과 (0.10ms, 33.5MB)
테스트 22 〉	통과 (0.16ms, 33.4MB)
테스트 23 〉	통과 (0.06ms, 33.6MB)
 */