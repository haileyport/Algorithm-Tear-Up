/*
통과 여부 : 통과
시간 : 5분
점수 : +2

** 의사코드 **
1. p와 y의 개수 입력 받을 변수 선언 및 초기화
2. p를 발견하면 p의 개수를, y를 발견하면 y를 올림.
3. 같다면 true, 다르다면 false

테스트 1 〉	통과 (0.04ms, 33.4MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.04ms, 33.5MB)
테스트 4 〉	통과 (0.04ms, 33.4MB)
테스트 5 〉	통과 (0.12ms, 33.4MB)
테스트 6 〉	통과 (0.13ms, 33.5MB)
테스트 7 〉	통과 (0.12ms, 33.5MB)
테스트 8 〉	통과 (0.12ms, 33.4MB)
테스트 9 〉	통과 (0.12ms, 33.4MB)
테스트 10 〉	통과 (0.12ms, 33.4MB)
테스트 11 〉	통과 (0.20ms, 33.4MB)
테스트 12 〉	통과 (0.12ms, 33.4MB)
테스트 13 〉	통과 (0.12ms, 33.4MB)
테스트 14 〉	통과 (0.17ms, 33.4MB)
테스트 15 〉	통과 (0.13ms, 33.4MB)
테스트 16 〉	통과 (0.16ms, 33.4MB)
테스트 17 〉	통과 (0.12ms, 33.6MB)
테스트 18 〉	통과 (0.12ms, 33.4MB)
테스트 19 〉	통과 (0.16ms, 33.4MB)
테스트 20 〉	통과 (0.18ms, 33.4MB)
테스트 21 〉	통과 (0.14ms, 33.4MB)
테스트 22 〉	통과 (0.13ms, 33.4MB)
테스트 23 〉	통과 (0.14ms, 33.4MB)
테스트 24 〉	통과 (0.12ms, 33.4MB)
테스트 25 〉	통과 (0.15ms, 33.4MB)
테스트 26 〉	통과 (0.13ms, 33.4MB)
테스트 27 〉	통과 (0.22ms, 33.4MB)
테스트 28 〉	통과 (0.19ms, 33.5MB)
테스트 29 〉	통과 (0.05ms, 33.4MB)
테스트 30 〉	통과 (0.12ms, 33.5MB)
*/

/**
 * 
 * @param {*} s 대문자와 소문자가 섞여있는 문자열
 * @returns P와 Y의 개수를 비교한 Boolean
 */
function PandY(s){
    let isP = 0;
    let isY = 0;
    for(let i=0; i< s.length; i++){
        s[i]==="p"||s[i]==="P"? isP++
        : s[i]==="y"||s[i]==="Y"? isY++
        : false;
    }
    return isP===isY? true:false;
    
}