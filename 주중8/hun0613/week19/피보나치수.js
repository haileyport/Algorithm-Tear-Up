// 테스트 1 〉	통과 (0.04ms, 33.5MB)
// 테스트 2 〉	통과 (0.04ms, 33.4MB)
// 테스트 3 〉	통과 (0.05ms, 33.5MB)
// 테스트 4 〉	통과 (0.07ms, 33.4MB)
// 테스트 5 〉	통과 (0.06ms, 33.4MB)
// 테스트 6 〉	통과 (0.05ms, 33.5MB)
// 테스트 7 〉	통과 (0.34ms, 33.5MB)
// 테스트 8 〉	통과 (0.33ms, 33.4MB)
// 테스트 9 〉	통과 (0.21ms, 32.7MB)
// 테스트 10 〉	통과 (0.33ms, 32.8MB)
// 테스트 11 〉	통과 (0.15ms, 33.5MB)
// 테스트 12 〉	통과 (0.24ms, 33.4MB)
// 테스트 13 〉	통과 (3.13ms, 37.3MB)
// 테스트 14 〉	통과 (2.94ms, 37.3MB)

function solution(n) {
    let fibo = Array(n+1).fill(0);
    
    fibo[0] = 0;
    fibo[1] = 1;
    
    for(let i = 2; i <= n; i++){
        fibo[i] = (fibo[i-2] + fibo[i-1]) % 1234567; 
    }
    
    return fibo.pop();
}