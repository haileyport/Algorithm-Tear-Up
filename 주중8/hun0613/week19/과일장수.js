// 테스트 1 〉	통과 (0.17ms, 33.5MB)
// 테스트 2 〉	통과 (0.07ms, 33.5MB)
// 테스트 3 〉	통과 (0.16ms, 33.5MB)
// 테스트 4 〉	통과 (0.14ms, 33.4MB)
// 테스트 5 〉	통과 (0.17ms, 33.4MB)
// 테스트 6 〉	통과 (43.75ms, 41.2MB)
// 테스트 7 〉	통과 (43.78ms, 39.6MB)
// 테스트 8 〉	통과 (3.66ms, 36.1MB)
// 테스트 9 〉	통과 (44.76ms, 38.7MB)
// 테스트 10 〉	통과 (14.93ms, 40MB)
// 테스트 11 〉	통과 (292.03ms, 96.5MB)
// 테스트 12 〉	통과 (253.12ms, 96.5MB)
// 테스트 13 〉	통과 (257.15ms, 96MB)
// 테스트 14 〉	통과 (295.08ms, 95.8MB)
// 테스트 15 〉	통과 (258.29ms, 97.4MB)
// 테스트 16 〉	통과 (0.06ms, 33.4MB)
// 테스트 17 〉	통과 (0.10ms, 33.6MB)
// 테스트 18 〉	통과 (0.26ms, 33.4MB)
// 테스트 19 〉	통과 (0.25ms, 33.5MB)
// 테스트 20 〉	통과 (0.39ms, 33.4MB)
// 테스트 21 〉	통과 (0.10ms, 33.5MB)
// 테스트 22 〉	통과 (0.10ms, 33.5MB)
// 테스트 23 〉	통과 (0.10ms, 33.6MB)
// 테스트 24 〉	통과 (0.11ms, 33.4MB)

function solution(k, m, score) {
    //m : 한 상자에 담는 사과 수
    //k : 사과의 최고점수
    //score : 사과 점수
    
    // 사과 한상자의 가격 : 최저점 * m
    
    let answer = 0;
    let sortedScore = score.sort((a,b)=>a-b);
    
    while(sortedScore.length >= m){
        let box = [];
        for (let i = 0; i < m; i++){
            box.push(sortedScore.pop());
        }
        answer += (Math.min(...box) * m);
    }
    return answer;
}
    